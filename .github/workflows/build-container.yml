name: Build Image using Containerfile
on:
  workflow_dispatch:
  push:
    paths:
      - container/**
      - .github/workflows/build-container.yaml
env:
  IMAGE_NAME: quay.io/rgordill/httpd-micro
  
jobs:
  set_context:
    name: Set context
    runs-on: ubuntu-24.04
    outputs:
      IMAGE_TAG: ${{ steps.get_latest_tag.outputs.IMAGE_TAG }}
    env:
      IMAGE_NAME: quay.io/rgordill/httpd-micro
      IMAGE_VERSION: "2.4.63"
    steps:
    - name: Query latest image tag suffix
      id: get_latest_tag
      run: |
        set -e
        TAGS=$(curl -s "https://quay.io/api/v1/repository/${IMAGE_NAME#quay.io/}/tag/?onlyActiveTags=true" | jq -r '.tags[].name')
        PREFIX="${IMAGE_VERSION}-"
        SUFFIXES=$(echo "$TAGS" | grep "^${PREFIX}[0-9]\+$" | sed "s/^${PREFIX}//" | sort -n)
        if [ -n "$SUFFIXES" ]; then
          LATEST=$(echo "$SUFFIXES" | tail -n1)
          NEXT=$((LATEST + 1))
        else
          NEXT=1
        fi
        IMAGE_TAG="${IMAGE_VERSION}-$NEXT"
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "Using tag: $IMAGE_TAG"

  build_arch:
    name: Build ${{ matrix.arch }} image
    needs: set_context
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    env:
      IMAGE_TAG: ${{ needs.set_context.outputs.IMAGE_TAG }}
      PLATFORM: linux/${{ matrix.arch }}

    steps:
    - name: Debug env variables
      run: |
        echo "IMAGE_TAG: ${{ env.IMAGE_TAG }}"
        echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Buildah Action
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        platforms: ${{ env.PLATFORM }}
        context: container
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAG }}
        containerfiles: |
          container/Containerfile.ubi10-micro

    - name: Create a tarball of the image to upload to release
      run: |
        TAR_NAME=$(basename ${{ env.IMAGE_NAME }})-${{ env.IMAGE_TAG }}-${{ matrix.arch }}.tar
        buildah push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} oci-archive:$TAR_NAME
        ls -l $TAR_NAME
        echo "TAR_NAME=$TAR_NAME" >> $GITHUB_ENV

    - name: Upload image tarball
      uses: actions/upload-artifact@v4
      with:
        name: image-tarball-${{ matrix.arch }}
        path: ${{ env.TAR_NAME }}

  create_manifest:
    name: Create manifest
    runs-on: ubuntu-24.04
    needs: [set_context, build_arch]
    env:
      IMAGE_TAG: ${{ needs.set_context.outputs.IMAGE_TAG }}
    steps:
    - name: Download amd64 image tarball
      uses: actions/download-artifact@v4
      with:
        name: image-tarball-amd64
        path: .

    - name: Download arm64 image tarball
      uses: actions/download-artifact@v4
      with:
        name: image-tarball-arm64
        path: .

    - name: Create manifest and add images
      run: |
        set -x
        TAR_PREFIX=$(basename ${{ env.IMAGE_NAME }})-${{ env.IMAGE_TAG }}

        buildah manifest create ${IMAGE_NAME}:${IMAGE_TAG}
        buildah manifest add ${IMAGE_NAME}:${IMAGE_TAG} oci-archive:${TAR_PREFIX}-amd64.tar
        buildah manifest add ${IMAGE_NAME}:${IMAGE_TAG} oci-archive:${TAR_PREFIX}-arm64.tar

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ env.IMAGE_TAG }}
        registry: quay.io/rgordill
        username: rgordill+github_actions
        password: ${{ secrets.REGISTRY_ROBOT_TOKEN }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"